rm(list=ls(all=T)) #removes all objects from the current workspace (R memory)
setwd("C:/Users/swat/Desktop/cab_fare_prediction_divakar/cab_fare_prediction_divakar") #Seting up the working directory.
#C:/Users/swat/Desktop/cab_fare_prediction_divakar/cab_fare_prediction_divakar
getwd()
x=c("ggplot2", "DMwR", "corrgram", "Hmisc", "rpart", "randomForest", "geosphere")
install.packages(x) #install packages
lapply(x, require, character.only = TRUE)
rm(x) #removing the x object as packages installed and loaded to working space.
train= read.csv("./train_cab/train_cab.csv", header = T)[,-2]
train= read.csv(".Given data/train_cab/train_cab.csv", header = T)[,-2]
train= read.csv("./Given data/train_cab/train_cab.csv", header = T)[,-2]
train= read.csv("./Given data/train_cab.csv", header = T)[,-2]
view(train)
View(train)
colnames(train)
dim(train)
head(train, 5)
str(train)
train$fare_amount=as.numeric(as.character(train$fare_amount))
train$passenger_count=as.integer(train$passenger_count)
str(train)
train=subset(train, !(train$pickup_longitude==train$dropoff_longitude & train$pickup_latitude==train$dropoff_latitude))
train[train==0]= NA
missingvalue= function(data){
missing_value = data.frame(apply(data, 2 , function(x){sum(is.na(x))}))
colnames(missing_value)="Missing_Value_count"
missing_value$percentage=apply(missing_value , 1 , function(x){x/nrow(train)*100})
missing_value = cbind(row.names(missing_value), missing_value)
row.names(missing_value)=NULL
colnames(missing_value)[1]="Variables"
print(missing_value)
###########plot Missing Values#######################
library(ggplot2)
ggplot(data = missing_value, aes(x=reorder(Variables , -percentage),y = percentage))+
geom_bar(stat = "identity",fill = "blue")+xlab("Variables")+
ggtitle("Missing Values") + theme_bw()
}
missing_value = data.frame(apply(data, 2 , function(x){sum(is.na(x))}))
data = train
data = train
missing_value = data.frame(apply(data, 2 , function(x){sum(is.na(x))}))
print(missing_value)
colnames(missing_value)
missing_value = cbind(row.names(missing_value), missing_value)
print(missing_value)
row.names(missing_value)=NULL
colnames(missing_value)[1]="Variables"
print(missing_value)
unique(data)
train[40,1]
train$fare_amount[is.na(train$fare_amount)] = mean(train$fare_amount, na.rm = T)
train[40,1]
View(train)
train[40,1]= NA
train[40,1]
train$fare_amount[is.na(train$fare_amount)] = mean(train$fare_amount, na.rm = T)
train[40,1]
train[40,1]= NA
train$fare_amount[is.na(train$fare_amount)] = median(train$fare_amount, na.rm = T)
train[40,1]
train = knnImputation(train, k = 5)
train[40,1]
train[40,1]= NA
train$fare_amount[is.na(train$fare_amount)] = knnImputation(train$fare_amount, k = 5)
train[40,1]= NA
train = knnImputation(train, k = 5)
train[40,1]
df=train
train=train[complete.cases(train[,1]),]
str(df)
str(train)
unique(train$passenger_count)
for (i in 1:length(cnames))
{
assign(paste0("gn",i), ggplot(aes_string(y = (cnames[i]), x = "fare_amount"), data = train)+
stat_boxplot(geom = "errorbar", width = 0.5) +
geom_boxplot(outlier.colour="red", fill = "grey" ,outlier.shape=18,
outlier.size=1, notch=FALSE) +
theme(legend.position="bottom")+
labs(y=cnames[i],x="y")+
ggtitle(paste("Box plot of fare amount",cnames[i])))
}
cnames=colnames(train[,c(2:5)])
for (i in 1:length(cnames))
{
assign(paste0("gn",i), ggplot(aes_string(y = (cnames[i]), x = "fare_amount"), data = train)+
stat_boxplot(geom = "errorbar", width = 0.5) +
geom_boxplot(outlier.colour="red", fill = "grey" ,outlier.shape=18,
outlier.size=1, notch=FALSE) +
theme(legend.position="bottom")+
labs(y=cnames[i],x="y")+
ggtitle(paste("Box plot of fare amount",cnames[i])))
}
gridExtra::grid.arrange(gn1, gn2, ncol=2)
gridExtra::grid.arrange(gn3, gn4, ncol=2)
RF_model = randomForest(fare_amount ~.  , train1, importance = TRUE, ntree=200, mtry=2)
RF_Predictions = predict(RF_model, test1[,-1])
MAPE(test1[,1], RF_Predictions)
importance(RF_model, type = 1)
